#!/usr/bin/env ruby

lines = []
$labels = {}
$registers = [0] * 5
$memory = [0] * 15
$pc = 0

File.readlines(ARGV[0]).each do |line|
  if (line = line.gsub(/!(.*)$/,'').strip.gsub(/\s\s+|\t/,' ').downcase) != ''
    if (label = line.match(/^([a-z].*):\s/))
      $labels[label[1]] = lines.length
      line = line[label[0].length..-1]
    end
    lines.push line
  end
end

def set param, value
  if match = param.match(/^r([1-5])/)
    $registers[match[1].to_i-1] = value.to_i
  elsif match = param.match(/m\(r([1-5])\)/)
    $memory[$registers[match[1].to_i-1]] = value.to_i
  elsif match = param.match(/m\(([\d])\)/)
    $memory[match[1].to_i] = value.to_i
  end
end

def get param
  if match = param.match(/^r([1-5])/)
    $registers[match[1].to_i-1]
  elsif match = param.match(/m\(r([1-5])\)/)
    $memory[$registers[match[1].to_i-1]]
  elsif match = param.match(/m\(([\d])\)/)
    $memory[match[1].to_i]
  elsif $labels[param]
    $labels[param]
  else
    param.to_i
  end
end

while $pc < lines.length
  cmd = lines[$pc].split[0]
  p = lines[$pc][cmd.length..-1].gsub(/\s/, '').split ','
  $pc += 1

  case cmd
  when 'move'
    set p[1], get(p[0])
  when 'add'
    set p[2], get(p[0]) + get(p[1])
  when 'sub'
    set p[2], get(p[0]) - get(p[1])
  when 'mul'
    set p[2], get(p[0]) * get(p[1])
  when 'div'
    set p[2], get(p[0]) / get(p[1])
  when 'jump'
    $pc = get(p[0])
  when 'jpos'
    $pc = get(p[1]) if get(p[0]) >= 0
  when 'jneg'
    $pc = get(p[1]) if get(p[0]) < 0
  when 'jz'
    $pc = get(p[1]) if get(p[0]) == 0
  when 'jnz'
    $pc = get(p[1]) if get(p[0]) != 0
  when 'read'
    print 'Input: '
    set p[0], STDIN.gets.chomp()
  when 'print'
    puts get p[0]
  when 'stop'
    break
  end
end